# Makefile –¥–ª—è –º—É–∑—ã–∫–∞–ª—å–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏

.PHONY: help setup install start-local stop-local test deploy health info clean

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
BACKEND_DIR = backend
FRONTEND_DIR = frontend
TELEGRAM_BOT_DIR = telegram-bot

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN = \033[0;32m
YELLOW = \033[1;33m
RED = \033[0;31m
NC = \033[0m # No Color

# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º help
help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "${GREEN}–ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ - –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è${NC}"
	@echo "${YELLOW}–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "  ${GREEN}%-15s${NC} %s\n", $$1, $$2}' $(MAKEFILE_LIST)

setup: ## –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
	@echo "${GREEN}üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...${NC}"
	@if [ ! -f $(BACKEND_DIR)/.env ]; then \
		echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –¥–ª—è backend..."; \
		cp $(BACKEND_DIR)/.env.example $(BACKEND_DIR)/.env; \
		echo "${YELLOW}‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å $(BACKEND_DIR)/.env${NC}"; \
	fi
	@if [ -d $(TELEGRAM_BOT_DIR) ] && [ ! -f $(TELEGRAM_BOT_DIR)/.env ]; then \
		echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –¥–ª—è telegram bot..."; \
		cp $(TELEGRAM_BOT_DIR)/.env.example $(TELEGRAM_BOT_DIR)/.env; \
		echo "${YELLOW}‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å $(TELEGRAM_BOT_DIR)/.env${NC}"; \
	fi
	@echo "${GREEN}‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"

install: ## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
	@echo "${GREEN}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
	@echo "üîß Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
	@cd $(BACKEND_DIR) && npm install
	@if [ -d $(FRONTEND_DIR) ]; then \
		echo "üé® Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."; \
		cd $(FRONTEND_DIR) && npm install; \
	fi
	@if [ -d $(TELEGRAM_BOT_DIR) ]; then \
		echo "ü§ñ Telegram Bot –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."; \
		cd $(TELEGRAM_BOT_DIR) && pip install -r requirements.txt; \
	fi
	@echo "${GREEN}‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"

start-local: ## –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...${NC}"
	@echo "üîß –ó–∞–ø—É—Å–∫ Backend..."
	@cd $(BACKEND_DIR) && npm run dev &
	@sleep 3
	@if [ -d $(FRONTEND_DIR) ]; then \
		echo "üé® –ó–∞–ø—É—Å–∫ Frontend..."; \
		cd $(FRONTEND_DIR) && npm run dev & \
	fi
	@if [ -d $(TELEGRAM_BOT_DIR) ]; then \
		echo "ü§ñ –ó–∞–ø—É—Å–∫ Telegram Bot..."; \
		cd $(TELEGRAM_BOT_DIR) && python bot.py & \
	fi
	@echo "${GREEN}‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã${NC}"
	@echo "${YELLOW}üìä Backend: http://localhost:3000${NC}"
	@echo "${YELLOW}üé® Frontend: http://localhost:5173${NC}"
	@echo "${YELLOW}üîç –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'make health' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞${NC}"

stop-local: ## –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "${GREEN}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
	@pkill -f "nodemon" || true
	@pkill -f "vite" || true
	@pkill -f "node.*dev" || true
	@pkill -f "python.*bot.py" || true
	@echo "${GREEN}‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"

start-backend: ## –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ backend
	@echo "${GREEN}üîß –ó–∞–ø—É—Å–∫ Backend...${NC}"
	@cd $(BACKEND_DIR) && npm run dev

start-frontend: ## –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ frontend
	@echo "${GREEN}üé® –ó–∞–ø—É—Å–∫ Frontend...${NC}"
	@if [ -d $(FRONTEND_DIR) ]; then \
		cd $(FRONTEND_DIR) && npm run dev; \
	else \
		echo "${RED}‚ùå Frontend –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"; \
	fi

start-bot: ## –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ Telegram bot
	@echo "${GREEN}ü§ñ –ó–∞–ø—É—Å–∫ Telegram Bot...${NC}"
	@if [ -d $(TELEGRAM_BOT_DIR) ]; then \
		cd $(TELEGRAM_BOT_DIR) && python bot.py; \
	else \
		echo "${RED}‚ùå Telegram Bot –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"; \
	fi

health: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "${GREEN}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
	@echo "üîß Backend Health Check:"
	@curl -s http://localhost:3000/health | jq '.' 2>/dev/null || curl -s http://localhost:3000/health || echo "${RED}‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
	@echo ""
	@echo "üé® Frontend –ø—Ä–æ–≤–µ—Ä–∫–∞:"
	@curl -s -o /dev/null -w "%{http_code}" http://localhost:5173 2>/dev/null | grep -q "200" && echo "${GREEN}‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω${NC}" || echo "${RED}‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"

info: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ
	@echo "${GREEN}üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ${NC}"
	@echo "${YELLOW}Backend:${NC}"
	@if [ -f $(BACKEND_DIR)/package.json ]; then \
		cd $(BACKEND_DIR) && node -e "const pkg=require('./package.json'); console.log('  –í–µ—Ä—Å–∏—è:', pkg.version); console.log('  Node.js:', process.version);"; \
	fi
	@echo "${YELLOW}–°–µ—Ä–≤–∏—Å—ã:${NC}"
	@echo "  üîß Backend: http://localhost:3000"
	@echo "  üìä API Docs: http://localhost:3000/api"
	@echo "  üîç Health: http://localhost:3000/health"
	@if [ -d $(FRONTEND_DIR) ]; then \
		echo "  üé® Frontend: http://localhost:5173"; \
	fi
	@echo "${YELLOW}–§–∞–π–ª—ã:${NC}"
	@echo "  üìÅ –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã: files/"
	@echo "  üóÑÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: —Å–º. .env —Ñ–∞–π–ª"

test: ## –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
	@echo "${GREEN}üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...${NC}"
	@echo "üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Backend..."
	@cd $(BACKEND_DIR) && npm test
	@if [ -d $(FRONTEND_DIR) ] && [ -f $(FRONTEND_DIR)/package.json ]; then \
		echo "üé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Frontend..."; \
		cd $(FRONTEND_DIR) && npm test; \
	fi
	@echo "${GREEN}‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã${NC}"

populate-db: ## –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
	@echo "${GREEN}üóÑÔ∏è –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...${NC}"
	@cd $(BACKEND_DIR) && node populate-db.js
	@echo "${GREEN}‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø–æ–ª–Ω–µ–Ω–∞${NC}"

import-terms: ## –ò–º–ø–æ—Ä—Ç —Ç–µ—Ä–º–∏–Ω–æ–≤ –∏–∑ CSV —Ñ–∞–π–ª–∞
	@echo "${GREEN}üìö –ò–º–ø–æ—Ä—Ç —Ç–µ—Ä–º–∏–Ω–æ–≤ –∏–∑ files/terms.csv...${NC}"
	@cd $(BACKEND_DIR) && node import-terms.js ../files/terms.csv
	@echo "${GREEN}‚úÖ –¢–µ—Ä–º–∏–Ω—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã${NC}"

check-terms: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ terms.csv
	@echo "${GREEN}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ terms.csv...${NC}"
	@node check-terms.js

clean: ## –û—á–∏—Å—Ç–∫–∞ node_modules –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
	@echo "${GREEN}üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...${NC}"
	@echo "üîß –û—á–∏—Å—Ç–∫–∞ Backend..."
	@cd $(BACKEND_DIR) && rm -rf node_modules package-lock.json
	@if [ -d $(FRONTEND_DIR) ]; then \
		echo "üé® –û—á–∏—Å—Ç–∫–∞ Frontend..."; \
		cd $(FRONTEND_DIR) && rm -rf node_modules package-lock.json dist; \
	fi
	@if [ -d $(TELEGRAM_BOT_DIR) ]; then \
		echo "ü§ñ –û—á–∏—Å—Ç–∫–∞ Telegram Bot..."; \
		cd $(TELEGRAM_BOT_DIR) && rm -rf __pycache__ *.pyc .pytest_cache; \
	fi
	@echo "${GREEN}‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"

logs-backend: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ backend
	@echo "${GREEN}üìã –õ–æ–≥–∏ Backend:${NC}"
	@tail -f $(BACKEND_DIR)/logs/*.log 2>/dev/null || echo "${YELLOW}–õ–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏${NC}"

deploy: ## –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –¥–µ–ø–ª–æ—é
	@echo "${GREEN}üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –¥–µ–ø–ª–æ—é...${NC}"
	@echo "üîß –°–±–æ—Ä–∫–∞ Backend..."
	@cd $(BACKEND_DIR) && npm ci --production
	@if [ -d $(FRONTEND_DIR) ]; then \
		echo "üé® –°–±–æ—Ä–∫–∞ Frontend..."; \
		cd $(FRONTEND_DIR) && npm ci && npm run build; \
	fi
	@if [ -d $(TELEGRAM_BOT_DIR) ]; then \
		echo "ü§ñ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ Telegram Bot..."; \
		cd $(TELEGRAM_BOT_DIR) && pip install -r requirements.txt; \
	fi
	@echo "${GREEN}‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é${NC}"

dev-full: setup install start-local ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
	@echo "${GREEN}üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:${NC}"
	@echo "${YELLOW}Backend –ø—Ä–æ—Ü–µ—Å—Å—ã:${NC}"
	@pgrep -f "nodemon.*backend" && echo "‚úÖ Backend –∑–∞–ø—É—â–µ–Ω" || echo "‚ùå Backend –Ω–µ –∑–∞–ø—É—â–µ–Ω"
	@echo "${YELLOW}Frontend –ø—Ä–æ—Ü–µ—Å—Å—ã:${NC}"
	@pgrep -f "vite.*frontend" && echo "‚úÖ Frontend –∑–∞–ø—É—â–µ–Ω" || echo "‚ùå Frontend –Ω–µ –∑–∞–ø—É—â–µ–Ω"
	@echo "${YELLOW}Bot –ø—Ä–æ—Ü–µ—Å—Å—ã:${NC}"
	@pgrep -f "python.*bot.py" && echo "‚úÖ Bot –∑–∞–ø—É—â–µ–Ω" || echo "‚ùå Bot –Ω–µ –∑–∞–ø—É—â–µ–Ω"

# –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
restart: stop-local start-local ## –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤

# Telegram Bot —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
setup-telegram-bot: ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞
	@echo "${GREEN}ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞...${NC}"
	@if [ ! -f $(TELEGRAM_BOT_DIR)/.env ]; then \
		cp $(TELEGRAM_BOT_DIR)/.env.example $(TELEGRAM_BOT_DIR)/.env; \
		echo "${YELLOW}‚ö†Ô∏è  –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ $(TELEGRAM_BOT_DIR)/.env –∏ –¥–æ–±–∞–≤—å—Ç–µ TELEGRAM_BOT_TOKEN${NC}"; \
	else \
		echo "${GREEN}‚úÖ .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"; \
	fi

install-telegram-bot: ## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Telegram –±–æ—Ç–∞
	@echo "${GREEN}ü§ñ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Telegram –±–æ—Ç–∞...${NC}"
	@cd $(TELEGRAM_BOT_DIR) && pip install -r requirements.txt
	@echo "${GREEN}‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Telegram –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"

dev-telegram-bot: ## –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "${GREEN}ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...${NC}"
	@cd $(TELEGRAM_BOT_DIR) && python bot.py

logs-telegram-bot: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Telegram –±–æ—Ç–∞
	@echo "${GREEN}üìã –õ–æ–≥–∏ Telegram –±–æ—Ç–∞:${NC}"
	@tail -f $(TELEGRAM_BOT_DIR)/bot.log 2>/dev/null || echo "${YELLOW}–õ–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏${NC}"