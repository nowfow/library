"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–∏—Å–∫–∞ —Ç–µ—Ä–º–∏–Ω–æ–≤
"""

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from loguru import logger

from models.user import User
from services.api_client import api_client
from keyboards.inline import main_menu_keyboard, search_type_keyboard
from utils.formatters import format_term_info, format_error_message

router = Router()


@router.callback_query(F.data == "search_terms")
@router.message(F.text == "üìö –¢–µ—Ä–º–∏–Ω—ã")
async def search_terms(event, user: User):
    """–ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤"""
    
    text = (
        "üìö <b>–ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞:\n"
        "‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Ä–º–∏–Ω–∞\n"
        "‚Ä¢ –ß–∞—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è\n\n"
        "–ü—Ä–∏–º–µ—Ä: –≤–∞–ª—Ç–æ—Ä–Ω–∞, —Å—Ç–∞–∫–∫–∞—Ç–æ, –∫–æ–Ω—Ü–µ—Ä—Ç"
    )
    
    if hasattr(event, 'answer'):  # CallbackQuery
        await event.answer()
        await event.message.edit_text(text, reply_markup=search_type_keyboard())
    else:  # Message
        await event.answer(text, reply_markup=search_type_keyboard())


@router.message(Command("term"))
async def cmd_term(message: Message, user: User):
    """–ü–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–µ—Ä–º–∏–Ω–∞"""
    
    term = message.text[6:].strip()  # –£–±–∏—Ä–∞–µ–º "/term "
    
    if not term:
        await message.answer(
            "üìö <b>–ü–æ–∏—Å–∫ —Ç–µ—Ä–º–∏–Ω–∞</b>\n\n"
            "–í–≤–µ–¥–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞:\n"
            "–ü—Ä–∏–º–µ—Ä: <code>/term –≤–∞–ª—Ç–æ—Ä–Ω–∞</code>"
        )
        return
    
    await search_specific_term(message, term, user)


async def search_specific_term(message: Message, term: str, user: User):
    """–ü–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–µ—Ä–º–∏–Ω–∞"""
    
    loading_msg = await message.answer(f"üìö –ò—â—É —Ç–µ—Ä–º–∏–Ω '{term}'...")
    
    try:
        # –ü–æ–∏—Å–∫ —Ç–µ—Ä–º–∏–Ω–∞ —á–µ—Ä–µ–∑ API
        response = await api_client.search_terms(
            query=term,
            page=1,
            limit=5,
            jwt_token=user.jwt_token
        )
        
        if not response or response.get("error"):
            await loading_msg.edit_text(
                f"‚ùå –¢–µ—Ä–º–∏–Ω '{term}' –Ω–µ –Ω–∞–π–¥–µ–Ω",
                reply_markup=main_menu_keyboard()
            )
            return
        
        terms = response.get("data", response.get("results", []))
        
        if not terms:
            await loading_msg.edit_text(
                f"üìö –¢–µ—Ä–º–∏–Ω <b>'{term}'</b> –Ω–µ –Ω–∞–π–¥–µ–Ω.\n\n"
                "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n"
                "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ\n"
                "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–Ω–æ–Ω–∏–º—ã\n"
                "‚Ä¢ –ü–æ–∏—Å–∫ –ø–æ —á–∞—Å—Ç–∏ —Å–ª–æ–≤–∞",
                reply_markup=search_type_keyboard()
            )
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Ç–µ—Ä–º–∏–Ω
        first_term = terms[0]
        term_text = format_term_info(first_term)
        
        await loading_msg.edit_text(
            term_text,
            reply_markup=main_menu_keyboard()
        )
        
        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ –±–æ–ª—å—à–µ —Ç–µ—Ä–º–∏–Ω–æ–≤, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö
        if len(terms) > 1:
            other_terms = terms[1:]
            other_text = f"\n\nüìö <b>–î—Ä—É–≥–∏–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã:</b>\n"
            
            for i, other_term in enumerate(other_terms[:3], 2):
                term_name = other_term.get("term", "")
                other_text += f"{i}. {term_name}\n"
            
            if len(terms) > 4:
                other_text += f"... –∏ –µ—â–µ {len(terms) - 4}"
            
            await message.answer(other_text, reply_markup=main_menu_keyboard())
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Ç–µ—Ä–º–∏–Ω–∞ '{term}': {e}")
        await loading_msg.edit_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Ç–µ—Ä–º–∏–Ω–∞ '{term}'",
            reply_markup=main_menu_keyboard()
        )