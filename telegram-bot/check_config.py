#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Telegram –±–æ—Ç–∞
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
    if sys.version_info < (3, 11):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.11 –∏–ª–∏ –≤—ã—à–µ")
        return False
    print(f"‚úÖ Python {sys.version.split()[0]} - OK")
    return True

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    required_packages = [
        'aiogram',
        'aiohttp',
        'aiofiles',
        'python-dotenv',
        'loguru',
        'pydantic'
    ]
    
    missing_packages = []
    
    for package in required_packages:
        try:
            __import__(package.replace('-', '_'))
            print(f"‚úÖ {package} - OK")
        except ImportError:
            print(f"‚ùå {package} - –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")
            missing_packages.append(package)
    
    return len(missing_packages) == 0

def check_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    try:
        from config.settings import settings
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        if not settings.TELEGRAM_BOT_TOKEN:
            print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
        
        if not settings.BACKEND_API_URL:
            print("‚ùå BACKEND_API_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        print(f"‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞: {settings.TELEGRAM_BOT_TOKEN[:10]}...")
        print(f"‚úÖ API URL: {settings.BACKEND_API_URL}")
        print(f"‚úÖ –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–æ–≤: {settings.LOG_LEVEL}")
        print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {settings.DATABASE_URL}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def check_imports():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ –º–æ–¥—É–ª–µ–π"""
    modules_to_check = [
        'config.settings',
        'config.database',
        'services.api_client',
        'handlers.auth_handlers',
        'handlers.search_handlers',
        'middleware.auth',
        'middleware.logging',
        'keyboards.inline',
        'keyboards.reply'
    ]
    
    failed_imports = []
    
    for module in modules_to_check:
        try:
            __import__(module)
            print(f"‚úÖ {module} - OK")
        except Exception as e:
            print(f"‚ùå {module} - –û–®–ò–ë–ö–ê: {e}")
            failed_imports.append(module)
    
    return len(failed_imports) == 0

def main():
    print("ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Telegram –±–æ—Ç–∞")
    print("=" * 40)
    
    all_checks_passed = True
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
    print("\nüêç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python:")
    if not check_python_version():
        all_checks_passed = False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
    if not check_dependencies():
        all_checks_passed = False
        print("\nüí° –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("   pip install -r requirements.txt")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print("\n‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    if not check_config():
        all_checks_passed = False
        print("\nüí° –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:")
        print("   cp .env.example .env")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
    print("\nüìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª–µ–π:")
    if not check_imports():
        all_checks_passed = False
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 40)
    if all_checks_passed:
        print("üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É.")
        print("\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("   python bot.py")
        return 0
    else:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º.")
        return 1

if __name__ == "__main__":
    sys.exit(main())