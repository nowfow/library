FROM node:18-alpine as base

WORKDIR /app

# Install dumb-init
RUN apk add --no-cache dumb-init

# Development stage
FROM base as development

# Install nodemon globally for development
RUN npm install -g nodemon

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev)
RUN npm install

# Copy source code
COPY src ./src

# Expose port
EXPOSE 3001

# Use nodemon for hot reloading
CMD ["npm", "run", "dev"]

# Production stage (reuse from main Dockerfile)
FROM base as production

# Create user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Copy package files
COPY --chown=nodejs:nodejs package*.json ./

# Install only production dependencies
RUN npm ci --only=production && \
    npm cache clean --force

# Copy source code
COPY --chown=nodejs:nodejs src ./src

# Switch to non-root user
USER nodejs

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node -e "console.log('Bot health check')" || exit 1

# Set environment
ENV NODE_ENV=production

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the bot
CMD ["node", "src/index.js"]