# Multi-stage Dockerfile for backend development
FROM node:18-alpine AS development

WORKDIR /app

# Install wget for health checks and development tools
RUN apk add --no-cache wget

# Install dependencies first for better layer caching
COPY package*.json ./
RUN npm ci

# Copy source code
COPY . .

# Expose port and debugger port
EXPOSE 3000 9229

# Development command with hot reloading (nodemon)
CMD ["npm", "run", "dev"]

# Production stage
FROM node:18-alpine AS production

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install production dependencies only
RUN npm ci --only=production

# Copy source code
COPY . .

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Change ownership and switch to non-root user
RUN chown -R nodejs:nodejs /app
USER nodejs

# Expose port
EXPOSE 3000

# Start application
CMD ["npm", "start"]