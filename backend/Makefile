# Makefile –¥–ª—è –º—É–∑—ã–∫–∞–ª—å–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Backend

.PHONY: help install dev start test clean setup db-init db-populate logs

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN := \033[0;32m
YELLOW := \033[0;33m
RED := \033[0;31m
NC := \033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
	@echo "$(GREEN)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "  $(YELLOW)%-15s$(NC) %s\n", $$1, $$2}' $(MAKEFILE_LIST)

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(GREEN)üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	npm install

setup: install ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
	@echo "$(GREEN)üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...$(NC)"
	@if [ ! -f .env ]; then \
		echo "$(YELLOW)‚ö†Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞...$(NC)"; \
		cp .env.example .env; \
		echo "$(RED)‚ùó –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å .env —Ñ–∞–π–ª!$(NC)"; \
	fi
	@echo "$(GREEN)‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"

dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	npm run dev

start: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º–µ
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º–µ...$(NC)"
	npm start

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "$(GREEN)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...$(NC)"
	@if ! curl -s http://localhost:3000/health > /dev/null; then \
		echo "$(RED)‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'make dev' –≤ –¥—Ä—É–≥–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ$(NC)"; \
		exit 1; \
	fi
	node test/test.js

db-init: ## –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "$(GREEN)üóÑÔ∏è  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü –ë–î...$(NC)"
	node -e "import('./src/db.js').then(db => db.initializeTables().then(() => process.exit(0)))"

db-populate: ## –ó–∞–ø–æ–ª–Ω–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
	@echo "$(GREEN)üìö –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	node populate-db.js

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à –∏ –ª–æ–≥–∏
	@echo "$(GREEN)üßπ –û—á–∏—Å—Ç–∫–∞...$(NC)"
	rm -rf node_modules
	rm -rf logs
	rm -f *.log

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞
	@echo "$(GREEN)üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:$(NC)"
	@if [ -d logs ]; then \
		tail -f logs/all.log; \
	else \
		echo "$(YELLOW)–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–≥–æ–≤.$(NC)"; \
	fi

check-env: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
	@echo "$(GREEN)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:$(NC)"
	@if [ -f .env ]; then \
		echo "$(GREEN)‚úÖ .env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω$(NC)"; \
		echo "$(YELLOW)–°–æ–¥–µ—Ä–∂–∏–º–æ–µ .env:$(NC)"; \
		cat .env | grep -v "PASSWORD\|SECRET"; \
	else \
		echo "$(RED)‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!$(NC)"; \
		echo "$(YELLOW)–í—ã–ø–æ–ª–Ω–∏—Ç–µ: make setup$(NC)"; \
	fi

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
	@echo "$(GREEN)üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞:$(NC)"
	@if curl -s http://localhost:3000/health > /dev/null; then \
		echo "$(GREEN)‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω$(NC)"; \
		curl -s http://localhost:3000/health | python3 -m json.tool; \
	else \
		echo "$(RED)‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω$(NC)"; \
	fi

backup-logs: ## –°–æ–∑–¥–∞—Ç—å –∞—Ä—Ö–∏–≤ –ª–æ–≥–æ–≤
	@echo "$(GREEN)üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –ª–æ–≥–æ–≤...$(NC)"
	@if [ -d logs ]; then \
		tar -czf logs_backup_$(shell date +%Y%m%d_%H%M%S).tar.gz logs/; \
		echo "$(GREEN)‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω$(NC)"; \
	else \
		echo "$(YELLOW)–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã$(NC)"; \
	fi

restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä (—Ç—Ä–µ–±—É–µ—Ç PM2)
	@echo "$(GREEN)üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...$(NC)"
	@if command -v pm2 > /dev/null; then \
		pm2 restart music-library || pm2 start src/index.js --name music-library; \
	else \
		echo "$(RED)‚ùå PM2 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: npm install -g pm2$(NC)"; \
	fi

docker-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
	@echo "$(GREEN)üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞...$(NC)"
	docker build -t music-library-backend .

docker-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ Docker
	@echo "$(GREEN)üê≥ –ó–∞–ø—É—Å–∫ –≤ Docker...$(NC)"
	docker run -p 3000:3000 --env-file .env music-library-backend

install-global: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
	@echo "$(GREEN)üåç –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤...$(NC)"
	npm install -g nodemon pm2

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –Ω–∞ –æ—à–∏–±–∫–∏
	@echo "$(GREEN)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞...$(NC)"
	@if command -v eslint > /dev/null; then \
		eslint src/; \
	else \
		echo "$(YELLOW)ESLint –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"; \
	fi

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	@echo "$(GREEN)‚ú® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞...$(NC)"
	@if command -v prettier > /dev/null; then \
		prettier --write src/; \
	else \
		echo "$(YELLOW)Prettier –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"; \
	fi