# Development overrides for Music Library - Ubuntu 22.04 optimized
# Usage: docker compose -f docker-compose.yml -f docker-compose.dev.yml up

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      target: development
    environment:
      NODE_ENV: development
      NODE_OPTIONS: "--max-old-space-size=512"
    volumes:
      - ./backend/src:/app/src:ro
      - ./backend/package.json:/app/package.json:ro
      - backend_node_modules:/app/node_modules
      - /etc/localtime:/etc/localtime:ro
    command: ["npm", "run", "dev"]
    ports:
      - "3000:3000"
      - "9229:9229"  # Node.js debugger
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
    stdin_open: true
    tty: true

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      target: development
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:3000
      VITE_HOST: 0.0.0.0
    volumes:
      - ./frontend/src:/app/src:ro
      - ./frontend/public:/app/public:ro
      - ./frontend/package.json:/app/package.json:ro
      - ./frontend/vite.config.js:/app/vite.config.js:ro
      - ./frontend/tailwind.config.js:/app/tailwind.config.js:ro
      - frontend_node_modules:/app/node_modules
      - /etc/localtime:/etc/localtime:ro
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "5173"]
    ports:
      - "5173:5173"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5173", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
    stdin_open: true
    tty: true

  telegram-bot:
    build:
      context: ./telegram-bot
      dockerfile: Dockerfile.dev
      target: development
    environment:
      NODE_ENV: development
    volumes:
      - ./telegram-bot/src:/app/src:ro
      - ./telegram-bot/package.json:/app/package.json:ro
      - telegram_bot_node_modules:/app/node_modules
    command: ["npm", "run", "dev"]

volumes:
  backend_node_modules:
  frontend_node_modules:
  telegram_bot_node_modules: